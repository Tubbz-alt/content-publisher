<%
  datetime = @edition.scheduled_publishing_datetime
  time = format_scheduled_time(datetime)
  date = format_scheduled_date(datetime)
  issues = Requirements::ScheduleChecker.new(@edition.revision).pre_schedule_issues
%>

<% scheduled_description = capture do %>
  <p class="govuk-body govuk-!-margin-bottom-1">
    <%= t("documents.show.scheduling.notice.scheduled",
          time: time,
          date: date) %>
  </p>

  <ul class="govuk-list govuk-!-margin-0">
    <li>
      <%= link_to "Change date",
                  edit_schedule_path(@edition.document),
                  class: "govuk-link govuk-link--no-visited-state" %>
    </li>
    <li>
      <%= form_tag schedule_path(@edition.document),
          method: :delete,
          data: { gtm: "unschedule" } do %>
        <button class="govuk-link app-link--button govuk-link--no-visited-state">
          Stop scheduled publishing
        </button>
      <% end %>
    </li>
  </ul>
<% end %>

<% proposed_scheduling_description = capture do %>
  <p class="govuk-body govuk-!-margin-bottom-1">
    <%= t("documents.show.scheduling.notice.proposed",
          time: time,
          date: date) %>
  </p>

  <%= link_to "Change date",
              schedule_proposal_path(@edition.document),
              class: "govuk-link govuk-link--no-visited-state" %>
<% end %>

<% if issues.any? %>
  <%= render "govuk_publishing_components/components/error_summary", {
    title: issues.items(style: "summary").first[:text],
    description: proposed_scheduling_description,
    margin_bottom: 4,
  } %>
<% elsif @edition.scheduled? %>
  <%= render "govuk_publishing_components/components/notice", {
    description: scheduled_description,
    margin_bottom: 4,
  } %>
<% else %>
  <%= render "govuk_publishing_components/components/notice", {
    description: proposed_scheduling_description,
    margin_bottom: 4,
  } %>
<% end %>
